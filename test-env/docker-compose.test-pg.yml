# This docker compose is for spinning up two postgres databases for local testing
# The two databases are on port 5433 and 5434
# Note: To connect to them from Pontoon running locally, use host.docker.internal for the hostname
#
# To run this docker compose, use the following command:
# docker compose -p pg_test_env -f docker-compose.test-pg.yml up

services:
  source-postgres:
    image: postgres:17.5-alpine
    environment:
      POSTGRES_USER: source
      POSTGRES_PASSWORD: test
      POSTGRES_DB: analytics
    volumes:
      - ./source_base.sql:/docker-entrypoint-initdb.d/source_base.sql
      - source-pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - source_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U source -d analytics"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
  destination-postgres:
    image: postgres:17.5-alpine
    environment:
      POSTGRES_USER: dest
      POSTGRES_PASSWORD: test
      POSTGRES_DB: destdb
    volumes:
      - destination-pgdata:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - destination_net
  mock-data-generator:
    build:
      context: .
      dockerfile: Dockerfile.mock-generator
    environment:
      DB_HOST: source-postgres
      DB_PORT: 5432
      DB_NAME: analytics
      DB_USER: source
      DB_PASSWORD: test
    depends_on:
      source-postgres:
        condition: service_healthy
    networks:
      - source_net
    restart: unless-stopped

volumes:
  source-pgdata:
  destination-pgdata:

networks:
  source_net:
    driver: bridge
  destination_net:
    driver: bridge